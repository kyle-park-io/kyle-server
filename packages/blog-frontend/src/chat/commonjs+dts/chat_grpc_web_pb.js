/**
 * @fileoverview gRPC-Web generated client stub for kyle_chat
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v5.27.2
// source: chat.proto

/* eslint-disable */
// @ts-nocheck

const grpc = {};
grpc.web = require('grpc-web');

var google_protobuf_wrappers_pb = require('google-protobuf/google/protobuf/wrappers_pb.js');

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
const proto = {};
proto.kyle_chat = require('./chat_pb.js');

/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.kyle_chat.ChatClient = function (hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');
};

/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.kyle_chat.ChatPromiseClient = function (hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');
};

/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.kyle_chat.TestMsg,
 *   !proto.google.protobuf.StringValue>}
 */
const methodDescriptor_Chat_SendMsgTest = new grpc.web.MethodDescriptor(
  '/kyle_chat.Chat/SendMsgTest',
  grpc.web.MethodType.UNARY,
  proto.kyle_chat.TestMsg,
  google_protobuf_wrappers_pb.StringValue,
  /**
   * @param {!proto.kyle_chat.TestMsg} request
   * @return {!Uint8Array}
   */
  function (request) {
    return request.serializeBinary();
  },
  google_protobuf_wrappers_pb.StringValue.deserializeBinary,
);

/**
 * @param {!proto.kyle_chat.TestMsg} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.google.protobuf.StringValue)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.google.protobuf.StringValue>|undefined}
 *     The XHR Node Readable Stream
 */
proto.kyle_chat.ChatClient.prototype.sendMsgTest = function (
  request,
  metadata,
  callback,
) {
  return this.client_.rpcCall(
    this.hostname_ + '/kyle_chat.Chat/SendMsgTest',
    request,
    metadata || {},
    methodDescriptor_Chat_SendMsgTest,
    callback,
  );
};

/**
 * @param {!proto.kyle_chat.TestMsg} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.google.protobuf.StringValue>}
 *     Promise that resolves to the response
 */
proto.kyle_chat.ChatPromiseClient.prototype.sendMsgTest = function (
  request,
  metadata,
) {
  return this.client_.unaryCall(
    this.hostname_ + '/kyle_chat.Chat/SendMsgTest',
    request,
    metadata || {},
    methodDescriptor_Chat_SendMsgTest,
  );
};

/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.kyle_chat.ChatMsg,
 *   !proto.google.protobuf.StringValue>}
 */
const methodDescriptor_Chat_SendMsg = new grpc.web.MethodDescriptor(
  '/kyle_chat.Chat/SendMsg',
  grpc.web.MethodType.UNARY,
  proto.kyle_chat.ChatMsg,
  google_protobuf_wrappers_pb.StringValue,
  /**
   * @param {!proto.kyle_chat.ChatMsg} request
   * @return {!Uint8Array}
   */
  function (request) {
    return request.serializeBinary();
  },
  google_protobuf_wrappers_pb.StringValue.deserializeBinary,
);

/**
 * @param {!proto.kyle_chat.ChatMsg} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.google.protobuf.StringValue)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.google.protobuf.StringValue>|undefined}
 *     The XHR Node Readable Stream
 */
proto.kyle_chat.ChatClient.prototype.sendMsg = function (
  request,
  metadata,
  callback,
) {
  return this.client_.rpcCall(
    this.hostname_ + '/kyle_chat.Chat/SendMsg',
    request,
    metadata || {},
    methodDescriptor_Chat_SendMsg,
    callback,
  );
};

/**
 * @param {!proto.kyle_chat.ChatMsg} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.google.protobuf.StringValue>}
 *     Promise that resolves to the response
 */
proto.kyle_chat.ChatPromiseClient.prototype.sendMsg = function (
  request,
  metadata,
) {
  return this.client_.unaryCall(
    this.hostname_ + '/kyle_chat.Chat/SendMsg',
    request,
    metadata || {},
    methodDescriptor_Chat_SendMsg,
  );
};

/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.kyle_chat.GetTestMsg,
 *   !proto.kyle_chat.TestMsg>}
 */
const methodDescriptor_Chat_GetMsgTest = new grpc.web.MethodDescriptor(
  '/kyle_chat.Chat/GetMsgTest',
  grpc.web.MethodType.UNARY,
  proto.kyle_chat.GetTestMsg,
  proto.kyle_chat.TestMsg,
  /**
   * @param {!proto.kyle_chat.GetTestMsg} request
   * @return {!Uint8Array}
   */
  function (request) {
    return request.serializeBinary();
  },
  proto.kyle_chat.TestMsg.deserializeBinary,
);

/**
 * @param {!proto.kyle_chat.GetTestMsg} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.kyle_chat.TestMsg)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.kyle_chat.TestMsg>|undefined}
 *     The XHR Node Readable Stream
 */
proto.kyle_chat.ChatClient.prototype.getMsgTest = function (
  request,
  metadata,
  callback,
) {
  return this.client_.rpcCall(
    this.hostname_ + '/kyle_chat.Chat/GetMsgTest',
    request,
    metadata || {},
    methodDescriptor_Chat_GetMsgTest,
    callback,
  );
};

/**
 * @param {!proto.kyle_chat.GetTestMsg} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.kyle_chat.TestMsg>}
 *     Promise that resolves to the response
 */
proto.kyle_chat.ChatPromiseClient.prototype.getMsgTest = function (
  request,
  metadata,
) {
  return this.client_.unaryCall(
    this.hostname_ + '/kyle_chat.Chat/GetMsgTest',
    request,
    metadata || {},
    methodDescriptor_Chat_GetMsgTest,
  );
};

/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.kyle_chat.GetChatMsg,
 *   !proto.kyle_chat.ChatMsg>}
 */
const methodDescriptor_Chat_GetMsg = new grpc.web.MethodDescriptor(
  '/kyle_chat.Chat/GetMsg',
  grpc.web.MethodType.UNARY,
  proto.kyle_chat.GetChatMsg,
  proto.kyle_chat.ChatMsg,
  /**
   * @param {!proto.kyle_chat.GetChatMsg} request
   * @return {!Uint8Array}
   */
  function (request) {
    return request.serializeBinary();
  },
  proto.kyle_chat.ChatMsg.deserializeBinary,
);

/**
 * @param {!proto.kyle_chat.GetChatMsg} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.kyle_chat.ChatMsg)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.kyle_chat.ChatMsg>|undefined}
 *     The XHR Node Readable Stream
 */
proto.kyle_chat.ChatClient.prototype.getMsg = function (
  request,
  metadata,
  callback,
) {
  return this.client_.rpcCall(
    this.hostname_ + '/kyle_chat.Chat/GetMsg',
    request,
    metadata || {},
    methodDescriptor_Chat_GetMsg,
    callback,
  );
};

/**
 * @param {!proto.kyle_chat.GetChatMsg} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.kyle_chat.ChatMsg>}
 *     Promise that resolves to the response
 */
proto.kyle_chat.ChatPromiseClient.prototype.getMsg = function (
  request,
  metadata,
) {
  return this.client_.unaryCall(
    this.hostname_ + '/kyle_chat.Chat/GetMsg',
    request,
    metadata || {},
    methodDescriptor_Chat_GetMsg,
  );
};

module.exports = proto.kyle_chat;
